DROP DATABASE IF EXISTS WALMART_SALES_DATA;
CREATE DATABASE IF NOT EXISTS WALMART_SALES_DATA;

DROP TABLE IF EXISTS SALES;
CREATE TABLE IF NOT EXISTS SALES(
	INVOICE_ID VARCHAR(30) NOT NULL PRIMARY KEY,
    BRANCH VARCHAR(5) NOT NULL,
    CITY VARCHAR(30) NOT NULL,
	CUSTOMER_TYPE VARCHAR(30) NOT NULL,
    GENDER VARCHAR(30) NOT NULL,
    PRODUCT_LINE VARCHAR(100) NOT NULL,
    UNIT_PRICE DECIMAL(10,2) NOT NULL,
    QUANTITY INT NOT NULL,
    VAT FLOAT(6,4) NOT NULL,
    TOTAL DECIMAL(12, 4) NOT NULL,
    DATE DATETIME NOT NULL,
    TIME_RANGE TIME NOT NULL,
    PAYMENT VARCHAR(15) NOT NULL,
    COGS DECIMAL(10,2) NOT NULL,
    GROSS_MARGIN_PCT FLOAT(11,9),
    GROSS_MARGIN DECIMAL(12, 4),
    RATING FLOAT(2, 1)
);

------------------------------------------------------------------------------------
-- TIME_OF_DAY

SELECT TIME_RANGE,
	(CASE 
		WHEN TIME_RANGE BETWEEN "00:00:00" AND "12:00:00" THEN "MORNING"
        WHEN TIME_RANGE BETWEEN "12:01:00" AND "16:00:00" THEN "AFTERNOON"
        ELSE "EVENING"
	END
    ) AS TIME_OF_DATE	
FROM SALES;

ALTER TABLE SALES ADD COLUMN TIME_OF_DAY VARCHAR(20);
UPDATE SALES 
SET TIME_OF_DAY = (
	CASE 
		WHEN TIME_RANGE BETWEEN "00:00:00" AND "12:00:00" THEN "MORNING"
        WHEN TIME_RANGE BETWEEN "12:01:00" AND "16:00:00" THEN "AFTERNOON"
        ELSE "EVENING"
	END
);

-- DAY_NAME

SELECT DATE FROM SALES;
SELECT DATE, dayname(DATE) FROM SALES;

ALTER TABLE SALES ADD COLUMN DAY_NAME VARCHAR(30);
UPDATE SALES
SET DAY_NAME = dayname(DATE);

-- MONTH_NAME

SELECT DATE, monthname(DATE) FROM SALES;
ALTER TABLE SALES ADD COLUMN MONTH_NAME VARCHAR (15);
UPDATE SALES SET MONTH_NAME = monthname(DATE);

-- HOW MANY UNIQUE CITIES DOES THE DATA HAVE ?
SELECT DISTINCT CITY FROM SALES;

-- IN WHICH CITY IS EACH BRANCH ?
SELECT DISTINCT CITY,BRANCH FROM SALES;

--------------------------------------------------------------------------------------

-- HOW MANY UNIQUE PRODUCT LINE DOES THE DATE HAVE ?
SELECT COUNT(DISTINCT PRODUCT_LINE) FROM SALES;

-- WHAT IS THE MOST COMMON PAYMENT METHOD IN DATA ?
SELECT PAYMENT, COUNT(PAYMENT) AS COUNT FROM SALES 
GROUP BY PAYMENT ORDER BY COUNT DESC;

-- WHAT IS THE 3 MOST SELLING PRODUCT LINE ?
SELECT PRODUCT_LINE, COUNT(QUANTITY) AS COUNT FROM SALES 
GROUP BY PRODUCT_LINE ORDER BY COUNT DESC LIMIT 3;

-- WHAT IS THE TOTAL REVENUE BY MONTH ?
SELECT MONTH_NAME AS MONTH, SUM(TOTAL) AS TOTAL_REVENUE FROM SALES 
GROUP BY MONTH_NAME ORDER BY TOTAL_REVENUE DESC ;

-- WHICH MONTH HAD THE LARGEST COGS ?
SELECT MONTH_NAME AS MONTH, SUM(COGS) AS TOTAL_COGS FROM SALES 
GROUP BY MONTH_NAME ORDER BY TOTAL_COGS DESC;

-- WHAT PRODUCT LINE HAD THE LARGEST REVENUE ?
SELECT PRODUCT_LINE, SUM(TOTAL) AS REVENUE FROM SALES 
GROUP BY PRODUCT_LINE ORDER BY REVENUE DESC;

-- WHAT IS THE CITY WITH LARGEST REVENUE ?
SELECT BRANCH, CITY, SUM(TOTAL) AS REVENUE FROM SALES 
GROUP BY CITY, BRANCH ORDER BY REVENUE DESC;

-- WHAT PRODUCT LINE HAD THE LARGEST VAT ?
SELECT PRODUCT_LINE, AVG(VAT) AS AVG_VAT FROM SALES 
GROUP BY PRODUCT_LINE ORDER BY AVG_VAT DESC;

-- FETCH EACH PRODUCT LINE AND ADD A COLUMN TO THOSE PRODUCT LINE SHOWING "GOOD","BAD". GOOD IF ITS 
-- GREATER THAN AVERAGE SALES

CREATE TEMPORARY TABLE TEMP_AVG_SALES AS
SELECT PRODUCT_LINE, AVG(TOTAL) AS AVG_SALES FROM SALES GROUP BY PRODUCT_LINE;

ALTER TABLE SALES ADD COLUMN SALES_CLASSIFICATION VARCHAR(10);

UPDATE SALES S JOIN TEMP_AVG_SALES TAS ON S.PRODUCT_LINE = TAS.PRODUCT_LINE
SET S.SALES_CLASSIFICATION = CASE WHEN S.TOTAL > TAS.AVG_SALES THEN "GOOD" ELSE "BAD" END;

DROP TABLE IF EXISTS TEMP_AVG_SALES;

-- WHICH BRANCH SOLD MORE PRODUCTS THAN AVERAGE PRODUCT SOLD ?
SELECT BRANCH, SUM(QUANTITY) AS QTY FROM SALES 
GROUP BY BRANCH HAVING SUM(QUANTITY) > (SELECT AVG(QUANTITY) FROM SALES);

-- WHAT IS THE MOST COMMON PRODUCT LINE BY GENDER ?
SELECT GENDER, PRODUCT_LINE, COUNT(GENDER) AS TOTAL_GEN FROM SALES 
GROUP BY GENDER, PRODUCT_LINE ORDER BY TOTAL_GEN DESC;

-- WHAT IS THE AVERAGE RATING OF EACH PROUDUCT LINE ?
SELECT ROUND(AVG(RATING),2) AS AVG_RATE, PRODUCT_LINE FROM SALES 
GROUP BY PRODUCT_LINE ORDER BY AVG_RATE DESC;

--------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------- SALES ------------------------------------------------------------

-- NUMBER OF SALES MADE IN EACH TIME OF THE DAY PER WEEKDAY
SELECT TIME_OF_DAY, COUNT(*) AS NO_OF_SALES FROM SALES WHERE DAY_NAME = "MONDAY" 
GROUP BY TIME_OF_DAY ORDER BY NO_OF_SALES DESC;

-- WHICH OF THE CUSTOMER TYPE BRINGS MOST REVENUE ?
SELECT CUSTOMER_TYPE, ROUND(SUM(TOTAL),2) AS TOTAL_REVENUE FROM SALES 
GROUP BY CUSTOMER_TYPE ORDER BY TOTAL_REVENUE DESC;

-- WHICH CITY HAS THE LARGEST TAX PERCENT/ VAT (VALUE ADDED TAX) ?
SELECT CITY, AVG(VAT) AS VAT FROM SALES GROUP BY CITY ORDER BY VAT DESC;

-- WHICH CUSTOMER TYPE PAYS THE MOST IN VAT ?
SELECT CUSTOMER_TYPE, ROUND(AVG(VAT),3) AS VAT FROM SALES 
GROUP BY CUSTOMER_TYPE ORDER BY VAT DESC;

--------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------- CUSTOMER ------------------------------------------------------------
-- HOW MANY UNIQUE CUSTOMER TYPE DOES THE DATA HAVE ?
SELECT DISTINCT CUSTOMER_TYPE FROM SALES;

-- HOW MANY UNIQUE PAYMENT METHODS DOES THE DATA HAVE ?
SELECT DISTINCT PAYMENT FROM SALES;

-- WHICH CUSTOMER TYPE BUYS THE MOST ?
SELECT CUSTOMER_TYPE, COUNT(QUANTITY) AS QTY FROM SALES 
GROUP BY CUSTOMER_TYPE ORDER BY CUSTOMER_TYPE DESC;

-- WHAT IS THE GENDER OF MOST OF THE CUSTOMERS ?
SELECT GENDER, COUNT(*) AS GENDER_COUNT FROM SALES 
GROUP BY GENDER ORDER BY GENDER_COUNT DESC;

-- WHAT IS THE GENDER DISTRIBUTION PER BRANCH ?
SELECT GENDER, COUNT(*) AS GENDER_COUNT FROM SALES 
WHERE BRANCH="B" GROUP BY GENDER ORDER BY GENDER_COUNT DESC

--  WHICH TIME OF THE DAY DO CUSTOMERS GIVE MOST RATINGS ?
SELECT TIME_OF_DAY, AVG(RATING) AS AVG_RATING FROM SALES 
GROUP BY TIME_OF_DAY ORDER BY AVG_RATING DESC;

--  WHICH TIME OF THE DAY DO CUSTOMERS GIVE MOST RATINGS PER BRANCH ?
SELECT TIME_OF_DAY, AVG(RATING) AS AVG_RATING FROM SALES 
WHERE BRANCH = "A"GROUP BY TIME_OF_DAY ORDER BY AVG_RATING DESC;

-- WHICH DAY OF THE WEEK AS THE BEST AVERAGE RATINGS ?
SELECT DAY_NAME, AVG(RATING) AS RATING FROM SALES 
GROUP BY DAY_NAME ORDER BY RATING DESC;

-- WHICH DAY OF THE WEEK HAS THE BEST AVERAGE RATINGS PER BRANCH ?
SELECT DAY_NAME, AVG(RATING) AS RATING FROM SALES 
WHERE BRANCH="A" GROUP BY DAY_NAME ORDER BY RATING DESC;

-- 
